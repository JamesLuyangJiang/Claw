// --------------------------------------------------------------------------------------
// This program controls a servo motor to go to two different
// positions according to the state of an input switch
// and shows switch & servo status on the screen of an attached
// computer, via the Arduino Serial Monitor.
// --------------------------------------------------------------------------------------

#include <Servo.h>          //include the servo library for this program
Servo myservo;              //create servo object to control a servo
#include <NewPing.h>      // include the NewPing library for this program
#define VCC_PIN 13
#define TRIGGER_PIN 12    // sonar trigger pin will be attached to Arduino pin 12
#define ECHO_PIN 11       // sonar echo pint will be attached to Arduino pin 11
#define GROUND_PIN 10
#define MAX_DISTANCE 200  // fmaximum distance set to 200 cm
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // initialize NewPing

void setup()                //do these things once
{
  Serial. begin(9600);      //set data transmission rate to communicate with computer
  pinMode(8,INPUT_PULLUP);  //pin 8 forced to HIGH when there is no external input
  myservo.attach(9);        //attaches the servo on pin 9 to the servo object
   Serial. begin(9600);            // set data transmission rate to communicate with computer
  pinMode(ECHO_PIN, INPUT) ;  
  pinMode(TRIGGER_PIN, OUTPUT) ;
  pinMode(GROUND_PIN, OUTPUT);    // tell pin 10 it is going to be an output
  pinMode(VCC_PIN, OUTPUT);       // tell pin 13 it is going to be an output
  digitalWrite(GROUND_PIN,LOW);   // tell pin 10 to output LOW (OV, or ground)
  digitalWrite(VCC_PIN, HIGH) ;   // tell pin 13 to output HIGH (+5V)
}

void loop()                 //do these things forever
{

  delay(100);                             // wait for this number of milliseconds
  int DISTANCE_IN_CM = sonar.ping_cm();   // read the sonar sensor, using a variable
  Serial.print("Ping: ");                 //print “Ping:" on the computer display
  Serial.print(DISTANCE_IN_CM);           //print the value of the variable next
  Serial.println("cm");                   //print "cm" after that, then go to next line

  if (DISTANCE_IN_CM <= 30) // open the claw when in this distance range
  {
    myservo.write(30);      //servo position is 60 degrees
    Serial.print("open");   //print the word "open"
    Serial.println("");     //print nothing, go to next line

    DISTANCE_IN_CM = sonar.ping_cm();   // read the sonar sensor, using a variable
    Serial.print("Ping: ");                 //print “Ping:" on the computer display
    Serial.print(DISTANCE_IN_CM);           //print the value of the variable next
    Serial.println("cm");                   //print "cm" after that, then go to next line
    delay(5000);                             // wait for this number of milliseconds
  }
  
  myservo.write(200);       //otherwise, servo position is 150 degrees
  Serial.println("closed"); //print the word "closed"
  Serial.println("");       //print nothing, go to next line
  delay(5000);              //waits for 1 second before re-doing the loop  
}
